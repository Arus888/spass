const question = document.querySelector('#question');
const choices = Array.from(document.querySelectorAll('.choice-text'));
const progressText = document.querySelector('#progressText');
const scoreText = document.querySelector('#score');
const progressBarFull = document.querySelector('#progressBarFull');

let currentquestion = {}
let acceptingAnswers = true;
let score = 0;
let questionCounter = 0;
let availableQuestions = [];

let questions = [
    {
        question: "what is 2 + 27",
        choice1: "2",
        choice2: "4",
        choice3: "21",
        choice4: "24",
        answer: 2,
    },
    {
        question: "who is called humanitys strongest soldier in Attack on Titan",
        choice1: "Erwin Smith",
        choice2: "Hange Zoe",
        choice3: "Levi Ackerman",
        choice4: "Eren Yeager",
        answer: 3,
    },
    {
        question: "what was Erens purpose",
        choice1: "to protect Eldians",
        choice2: "to kill other human beings",
        choice3: "to save the world",
        choice4: "to not let humen to kill his lovely titans",
        answer: 1,
    },
    {
        question: "who killed the titans which were brought for experiments",
        choice1: "Armin Arlert",
        choice2: "Kenny",
        choice3: "the king",
        choice4: "Annie Leonhart",
        answer: 4,
    }
]

const SCORE_POINTS = 100;
const MAX_QUESTIONS = 4;

startGame = () => {
    questionCounter = 0;
    score = 0;
    availableQuestions = [...questions];
    getNewQuestion();
}

getNewQuestion = () => {
    if(availableQuestions.length === 0 || questionCounter > MAX_QUESTIONS) {
        localStorage.setItem('mostRecentScore', score)
        return window.location.assign('end.html')
    }

    questionCounter++
    progressText.innerText = `Question ${questionCounter} of ${MAX_QUESTIONS}`
    progressBarFull.style.width = `${(questionCounter/MAX_QUESTIONS) * 100}%`

    const questionsIndex = Math.floor(Math.random() * availableQuestions.length);
    currentQuestion = availableQuestions[questionsIndex];
    questionCounter.innerText = curentQuestions.question ;

    choices.forEach(chioice => {
        const number = choice.dataset['number'];
        choice.innerText = currentQuestion['choice' + number];
    })

    availableQuestions.splice(questionsIndex,  1);

    acceptingAnswers = true;
}

choices.forEach(choice => {
    choice.addEventListener('click', e => {
        if(!acceptingAnswers) return

        acceptingAnswers = false;
        const selectedChoice = e.target;
        const selectedAnswer = selectedChoice.dataset['number'];

        let classToApply = selectedAnswer == currentQuestion.answer ? 'correct' : 'incorrect'

        if(classToApply === 'correct') {
            incrementScore(SCORE_POINTS);
        }

        selectedChoice.parentElement.classList.add(classToApply);

        setTimeout(() => {
            selectedChoice.parentElement.classList.remove(classToApply)
            getNewQuestion();

        }, 1000);
    })
})

incrementScore = num => {
    score +=num
    scoreText.innerText = score
}

startGame









,.,.,.,.,.





